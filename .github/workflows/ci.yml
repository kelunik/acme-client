name: Continuous Integration

on:
  - push
  - pull_request

jobs:
  tests:
    strategy:
      matrix:
        include:
          - operating-system: 'ubuntu-latest'
            php-version: '8.1'

    name: PHP ${{ matrix.php-version }} ${{ matrix.job-description }}

    runs-on: ${{ matrix.operating-system }}

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          ini-values: zend.assertions=1, assert.exception=1
        env:
          update: true

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-dir)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('**/composer.*') }}-${{ matrix.composer-flags }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('**/composer.*') }}-
            composer-${{ runner.os }}-${{ matrix.php-version }}-
            composer-${{ runner.os }}-
            composer-

      - name: Install dependencies
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 5
          retry_wait_seconds: 30
          command: |
            composer update --optimize-autoloader --no-interaction --no-progress ${{ matrix.composer-flags }}
            composer info -D

      - name: Run tests
        run: vendor/bin/phpunit ${{ matrix.phpunit-flags }}

      - name: Run style fixer
        env:
          PHP_CS_FIXER_IGNORE_ENV: 1
        run: vendor/bin/php-cs-fixer --diff --dry-run -v fix
        if: matrix.php-cs-fixer != 'none'

      - name: Build phar
        run: php -dphar.readonly=0 vendor/bin/phar-builder package

      - name: Upload phar
        uses: actions/upload-artifact@v3
        with:
          name: acme-client.phar
          path: |
            build/acme-client.phar